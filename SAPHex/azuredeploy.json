{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string"
    },
    "virtualMachineName": {
      "type": "string"
    },
    "virtualMachineSize": {
      "type": "string"
    },
    "adminUsername": {
      "type": "string"
    },
    "virtualNetworkName": {
      "type": "string"
    },
    "networkInterfaceName": {
      "type": "string"
    },
    "networkSecurityGroupName": {
      "type": "string"
    },
    "adminPassword": {
      "type": "securestring"
    },
    "diagnosticsStorageAccountName": {
      "type": "string"
    },
    "diagnosticsStorageAccountId": {
      "type": "string"
    },
    "diagnosticsStorageAccountType": {
      "type": "string"
    },
    //"addressPrefix": {
    //  "type": "string"
    //},
    "subnetName": {
      "type": "string"
    },
    //"subnetPrefix": {
    //  "type": "string"
    //},
    "publicIpAddressName": {
      "type": "string"
    },
    "publicIpAddressType": {
      "type": "string"
    },
    "publicIpAddressSku": {
      "type": "string"
    },
    "autoShutdownStatus": {
      "type": "string"
    },
    "autoShutdownTime": {
      "type": "string"
    },
    "autoShutdownTimeZone": {
      "type": "string"
    },
    "autoShutdownNotificationStatus": {
      "type": "string"
    }
  },
  "variables": {
   //"vnetId": "[resourceId(resourceGroup().id,'Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
    //"subnetRef": "[concat(variables('vnetId'), '/subnets/', parameters('subnetName'))]",
    "virtualNetworkName": "[parameters('virtualNetworkName')]",
    "subnetName": "[parameters('SubnetName')]",
    "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]"

  },
    "resources": [
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[parameters('virtualMachineName')]",
            "apiVersion": "2017-03-30",
            "location": "[parameters('location')]",
            "plan": {
                "name": "server",
                "publisher": "sap",
                "product": "hanaexpress"
            },
            "properties": {
                "osProfile": {
                    "computerName": "[parameters('virtualMachineName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "sap",
                        "offer": "hanaexpress",
                        "sku": "server",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS"
                        }
                    },
                    "dataDisks": []
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaceName'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                  "bootDiagnostics": {
                    "enabled": true,
                    "storageUri": "[reference(resourceId( 'Microsoft.Storage/storageAccounts', parameters('diagnosticsStorageAccountName')), '2015-06-15').primaryEndpoints['blob']]"
                  }
                }
            },
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', parameters('networkInterfaceName'))]",
                "[concat('Microsoft.Storage/storageAccounts/', parameters('diagnosticsStorageAccountName'))]"
            ]
        },
      {
        "type": "Microsoft.DevTestLab/schedules",
        "name": "[concat('shutdown-computevm-', parameters('virtualMachineName'))]",
        "apiVersion": "2017-04-26-preview",
        "location": "[parameters('location')]",
        "properties": {
          "status": "[parameters('autoShutdownStatus')]",
          "taskType": "ComputeVmShutdownTask",
          "dailyRecurrence": {
            "time": "[parameters('autoShutdownTime')]"
          },
          "timeZoneId": "[parameters('autoShutdownTimeZone')]",
          "targetResourceId": "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachineName'))]",
          "notificationSettings": {
            "status": "[parameters('autoShutdownNotificationStatus')]",
            "timeInMinutes": "30"
          }
        },
        "dependsOn": [
          "[concat('Microsoft.Compute/virtualMachines/', parameters('virtualMachineName'))]"
        ]
      },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[parameters('diagnosticsStorageAccountName')]",
            "apiVersion": "2015-06-15",
            "location": "[parameters('location')]",
            "properties": {
                "accountType": "[parameters('diagnosticsStorageAccountType')]"
            }
        },
        //{
        //    "type": "Microsoft.Network/virtualNetworks",
        //    "name": "[parameters('virtualNetworkName')]",
        //    "apiVersion": "2018-02-01",
        //    "location": "[parameters('location')]",
        //    "properties": {
        //        "addressSpace": {
        //            "addressPrefixes": [
        //                "[parameters('addressPrefix')]"
        //            ]
        //        },
        //        "subnets": [
        //            {
        //                "name": "[parameters('subnetName')]",
        //                "properties": {
        //                    "addressPrefix": "[parameters('subnetPrefix')]"
        //                }
        //            }
        //        ]
        //    }
        //},
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[parameters('networkInterfaceName')]",
            "apiVersion": "2016-09-01",
            "location": "[parameters('location')]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                          "publicIpAddress": {
                            "id": "[resourceId('Microsoft.Network/publicIpAddresses', parameters('publicIpAddressName'))]"
                          }
                        }
                    }
                ],
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]"
              }
            },
          "dependsOn": [
            //"[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]",

            //"[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('Subnetname'))]",
            "[concat('Microsoft.Network/publicIpAddresses/', parameters('publicIpAddressName'))]" //,
            //"[concat('Microsoft.Network/networkSecurityGroups/', parameters('networkSecurityGroupName'))]"
          ]
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "sku": {
                "name": "[parameters('publicIpAddressSku')]"
            },
            "name": "[parameters('publicIpAddressName')]",
            "apiVersion": "2017-08-01",
            "location": "[parameters('location')]",
            "properties": {
                "publicIPAllocationMethod": "[parameters('publicIpAddressType')]"
            }
        } //,
        //{
        //    "type": "Microsoft.Network/networkSecurityGroups",
        //    "name": "[parameters('networkSecurityGroupName')]",
        //    "apiVersion": "2017-06-01",
        //    "location": "[parameters('location')]",
        //    "properties": {
        //        "securityRules": []
        //    }
        //}
    ],
    "outputs": {
        "adminUsername": {
            "type": "string",
            "value": "[parameters('adminUsername')]"
        }
    }
}